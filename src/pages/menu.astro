---
import menuData from '../../public/menu.json';
import Layout from '../layouts/Layout.astro';

// Get unique categories and organize dishes by category and subcategory
const { dishes } = menuData;
const categories = [...new Set(dishes.map(dish => dish.category))];

const organizedDishes = categories.reduce((acc: { [key: string]: any }, category) => {
  const categoryDishes = dishes.filter(dish => dish.category === category);
  const subcategories = [...new Set(categoryDishes.map(dish => dish.category))];
  
  acc[category] = {
    dishes: categoryDishes,
    subcategories: subcategories.map(subcategory => ({
      // name: subcategory,
      dishes: categoryDishes.filter(dish => dish.category === subcategory)
    }))
  };
  
  return acc;
}, {});

// Get a sample image for each category
const categoryImages = categories.reduce((acc: { [key: string]: string }, category) => {
  acc[category] = dishes.find(dish => dish.category === category)?.image || '';
  return acc;
}, {});
import Button from '../components/Button.astro';
---

<Layout title='Menu'>
  <meta name="Vanchu Hut Menu - Best Chinese Restaurant Menu in Ghaziabad" content="Explore Vanchu Hut's menu for the best Chinese food in Ghaziabad! Enjoy delicious takeout, an exquisite buffet, mouth-watering dumplings, and flavorful noodles in Pratap Vihar." />
  <section class="py-5 bg-gray-100 min-h-screen font-agdasima">
    <img src="/hero4.jpg" class="scale-100 w-screen h-[168px] transform -translate-y-[101px] md:-translate-y-[60px]  object-cover" alt="Header Image, shows picture of Various Chinese Food on a Table"/>
    <!-- <div class="absolute inset-0 bg-black opacity-80 h-[140px]"></div> -->

    <div class="container mx-auto px-4">
      <h1 class="text-4xl font-bold text-center mb-8">Our Menu</h1>
      <h2 class="pb-10 text-lg">Welcome to Vanchu Hut’s menu page, where you’ll find the finest selection of Chinese cuisine in Pratap Vihar, Ghaziabad. Our Chinese restaurant menu is thoughtfully crafted to cater to all your cravings, offering a delightful array of dishes that highlight the vibrant flavors of traditional Chinese cooking.</h2>
      <!-- Filter and Search Section -->
      <div class="flex flex-col md:flex-row justify-between items-center mb-8 gap-4">
        <div class="flex flex-wrap gap-2 w-full md:w-auto justify-center md:justify-start">
          <button id="all-type-btn" class="bg-primary text-white px-4 py-2 rounded">All</button>
          <button id="veg-btn" class="bg-green-500 text-white px-4 py-2 rounded">Veg</button>
          <button id="non-veg-btn" class="bg-red-500 text-white px-4 py-2 rounded">Non-Veg</button>
        </div>
        
        
      </div>

      <!-- Category Cards -->
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        {categories.map(category => (
          <button 
            class="category-card bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-all cursor-pointer transform hover:-translate-y-1"
            data-category={category}
          >
            <div class="relative h-48">
              <img 
                src={categoryImages[category]} 
                alt={category}
                class="w-full h-full object-cover"
              />
              <div class="absolute inset-0 bg-black bg-opacity-40"></div>
              <h3 class="absolute bottom-0 left-0 right-0 text-white text-xl font-bold p-4">
                {category}
              </h3>
            </div>
          </button>
        ))}
      </div>

      <!-- Modal -->
      <div id="category-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-lg w-full max-w-4xl max-h-[90vh] mx-4 overflow-hidden">
          <div class="p-4 bg-primary text-white flex justify-between items-center">
            <h2 id="modal-title" class="text-2xl font-bold"></h2>
            <button id="close-modal" class="text-3xl hover:opacity-80">&times;</button>
          </div>
          
          <div class="overflow-y-auto max-h-[calc(90vh-6rem)] p-4">
            <div id="modal-content"></div>
          </div>
        </div>
      </div>
      <div>

        <h4 class="py-10">
          Whether you're dining in or taking out, our menu is designed to satisfy your cravings for authentic Chinese cuisine. Explore our offerings and experience the rich flavors that have made us a favorite among locals. Visit Vanchu Hut today and discover why we’re the top choice for Chinese food in Ghaziabad!
        </h4>
        <div class="flex items-center justify-center ">
          <Button text={"VISIT OUR RESTAURANT"} onClick="/"/>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script define:vars={{ organizedDishes }}>
  const categoryCards = document.querySelectorAll('.category-card');
  const modal = document.getElementById('category-modal');
  const modalTitle = document.getElementById('modal-title');
  const modalContent = document.getElementById('modal-content');
  const closeModal = document.getElementById('close-modal');
  const searchInput = document.getElementById('search-input');
  const allTypeBtn = document.getElementById('all-type-btn');
  const vegBtn = document.getElementById('veg-btn');
  const nonVegBtn = document.getElementById('non-veg-btn');

  let currentFilter = 'all';

  function generateTableHTML(subcategory) {
    return `
      <div class="mb-6">
        <div class="overflow-x-auto">
          <table class="w-full bg-white rounded-lg shadow">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-4 text-left">Dish Name</th>
                <th class="px-6 py-4 text-center">Type</th>
                <th class="px-6 py-4 text-right">Half Plate</th>
                <th class="px-6 py-4 text-right">Full Plate</th>
              </tr>
            </thead>
            <tbody>
              ${subcategory.dishes
                .filter(dish => currentFilter === 'all' || dish.type === currentFilter)
                .map(dish => `
                  <tr class="border-t hover:bg-gray-50">
                    <td class="px-6 py-4">
                      <span class="text-gray-800">${dish.name}</span>
                    </td>
                    <td class="px-6 py-4 text-center">
                      <span class="inline-block px-2 py-1 rounded ${
                        dish.type === 'veg' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-red-100 text-red-800'
                      }">
                        ${dish.type === 'veg' ? 'Veg' : 'Non-Veg'}
                      </span>
                    </td>
                    <td class="px-6 py-4 text-right font-medium">₹${dish.price.half}</td>
                    <td class="px-6 py-4 text-right font-medium">₹${dish.price.full}</td>
                  </tr>
                `).join('')}
            </tbody>
          </table>
        </div>
      </div>
    `;
  }

  function showCategory(category) {
    modalTitle.textContent = category;
    // Combine all dishes from subcategories into a single table
    const allDishes = organizedDishes[category].subcategories.flatMap(sub => sub.dishes);
    modalContent.innerHTML = `
      <div class="mb-6">
        <div class="overflow-x-auto">
          <table class="w-full bg-white rounded-lg shadow">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-4 text-left">Dish Name</th>
                <th class="px-6 py-4 text-center">Type</th>
                <th class="px-6 py-4 text-right">Half Plate</th>
                <th class="px-6 py-4 text-right">Full Plate</th>
              </tr>
            </thead>
            <tbody>
              ${allDishes
                .filter(dish => currentFilter === 'all' || dish.type === currentFilter)
                .map(dish => `
                  <tr class="border-t hover:bg-gray-50">
                    <td class="px-6 py-4">
                      <span class="text-gray-800">${dish.name}</span>
                    </td>
                    <td class="px-6 py-4 text-center">
                      <span class="inline-block px-2 py-1 rounded ${
                        dish.type === 'veg' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-red-100 text-red-800'
                      }">
                        ${dish.type === 'veg' ? 'Veg' : 'Non-Veg'}
                      </span>
                    </td>
                    <td class="px-6 py-4 text-right font-medium">₹${dish.price.half}</td>
                    <td class="px-6 py-4 text-right font-medium">₹${dish.price.full}</td>
                  </tr>
                `).join('')}
            </tbody>
          </table>
        </div>
      </div>
    `;
    modal.classList.remove('hidden');
    modal.classList.add('flex');
    document.body.style.overflow = 'hidden';
  }

  function hideModal() {
    modal.classList.add('hidden');
    modal.classList.remove('flex');
    document.body.style.overflow = '';
  }

  // Event Listeners
  categoryCards.forEach(card => {
    card.addEventListener('click', () => {
      const category = card.getAttribute('data-category');
      if (category) showCategory(category);
    });
  });

  closeModal.addEventListener('click', hideModal);

  modal.addEventListener('click', (e) => {
    if (e.target === modal) hideModal();
  });

  // Filter functionality
  function filterByType(type) {
    currentFilter = type;
    const category = modalTitle.textContent;
    if (category && organizedDishes[category]) {
      showCategory(category);
    }
  }

  if (allTypeBtn) {
    allTypeBtn.addEventListener('click', () => filterByType('all'));
  }
  if (vegBtn) {
    vegBtn.addEventListener('click', () => filterByType('veg'));
  }
  if (nonVegBtn) {
    nonVegBtn.addEventListener('click', () => filterByType('non-veg'));
  }

  // Search functionality
  if (searchInput) {
    searchInput.addEventListener('input', (e) => {
      const query = e.target.value.toLowerCase();
      categoryCards.forEach(card => {
        const category = card.getAttribute('data-category');
        const categoryDishes = organizedDishes[category].dishes;
        const hasMatch = categoryDishes.some(dish => 
          dish.name.toLowerCase().includes(query) ||
          dish.tags.some(tag => tag.toLowerCase().includes(query))
        );
        card.style.display = hasMatch ? 'block' : 'none';
      });
    });
  }

  // Handle escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') hideModal();
  });
</script>